#ifndef __JZC_TCSM_H__
#define __JZC_TCSM_H__

/* TCSM space defined here*/
#define TCSM_BASE 0xF4000000
#define TCSM_BANK0 0xF4000000
#define TCSM_BANK1 0xF4001000
#define TCSM_BANK2 0xF4002000
#define TCSM_BANK3 0xF4003000

#define TCSM1_BASE 0xF4008000
#define TCSM1_VBASE 0x93808000
#define TCSM1_BANK0 0xF4008000
#define TCSM1_BANK1 0xF4009000
#define TCSM1_BANK2 0xF400A000
#define TCSM1_BANK3 0xF400B000
#define TCSM1_BANK4 0xF400C000
#define TCSM1_BANK5 0xF400D000
#define TCSM1_BANK6 0xF400E000
#define TCSM1_BANK7 0xF400F000

#define JZ_CACHELINE 32
#define TCSM1_VADDR(addr)            ((addr & 0x0000FFFF) | 0x93800000)
#define TCSM1_VADDR_UNCACHE(addr)    ((addr & 0x0000FFFF) | 0xB3800000)
#define TCSM1_ALN4(x)                ((x & 0x3)? (x + 4 - (x & 0x3)) : x)
#define ALIGN32(memptr)              (((unsigned int)(memptr) + 31) & 0xFFFFFFE0)

/*Dcore sync space*/
#define TCSM1_AUX_FRM_ARG TCSM_BASE

/* TCSM0:some architectures len   */
#define VLCINTRA_LEN 2048
#define VLCINTER_LEN 2048
/* TCSM0 space   */
#define TCSM0_VLCINTRA_ADDR TCSM_BANK0
#define TCSM0_VLCINTER_ADDR (TCSM0_VLCINTRA_ADDR + VLCINTER_LEN) 
#define TCSM0_MBARGS_BUF0 TCSM_BANK1
#define TCSM0_MBARGS_BUF1 TCSM_BANK2
#define TCSM0_MBARGS_BUF2 TCSM_BANK3

/* TCSM1:some architectures len   */
#define TCSM1_ALN4(x)                ((x & 0x3)? (x + 4 - (x & 0x3)) : x)
#define TCSM1_TASK_LEN 0x1000 /*suppose up-to 4bank instructions and data*/

/* Type define */
#define SPACE_TYPE_CHAR 0x0
#define SPACE_TYPE_SHORT 0x1
#define SPACE_TYPE_WORD 0x2
#define MB_LUMA_SIZE 256
#define MB_CHROM_SIZE 64
#define MB_4X4_BLK_NUM (16+4+4)
#define MB_BUF_SIZE (MB_LUMA_SIZE + MB_CHROM_SIZE*2)

/* TCSM1 space   */
#ifdef JZC_MDMA1_OPT
#define DFRM_ARG_LEN TCSM1_ALN4(sizeof(FIFO_DECODER))
#define TCSM1_DFRM_ADDR TCSM1_BANK4
#define TCSM1_DFRM_ADDR_VADDR TCSM1_VADDR(TCSM1_DFRM_ADDR)

#define TCSM1_FIFO_WP (TCSM1_DFRM_ADDR+DFRM_ARG_LEN)
#define TCSM1_FIFO_WP_VADDR TCSM1_VADDR_UNCACHE(TCSM1_FIFO_WP)

#define TCSM1_FIFO_START (TCSM1_FIFO_WP + 4)
#define TCSM1_FIFO_START_VADDR TCSM1_VADDR_UNCACHE(TCSM1_FIFO_START)
#define TCSM1_TASK_DONE (TCSM1_FIFO_START + 4)//C004

/*MB args buffer in tcsm1*/
#define MBARGS_BUF_LEN TCSM1_ALN4(sizeof(FIFO_MB))
#define TCSM1_MBARGS_BUF0 (TCSM1_TASK_DONE+4)
#define TCSM1_MBARGS_BUF1 (TCSM1_MBARGS_BUF0+MBARGS_BUF_LEN)
#define TCSM1_MBARGS_BUF2 (TCSM1_MBARGS_BUF1+MBARGS_BUF_LEN)

#else
#define TCSM1_FIFO_WP TCSM1_BANK4
#define TCSM1_FIFO_WP_VADDR TCSM1_VADDR_UNCACHE(TCSM1_FIFO_WP)

#define TCSM1_FIFO_START (TCSM1_FIFO_WP + 4)
#define TCSM1_FIFO_START_VADDR TCSM1_VADDR_UNCACHE(TCSM1_FIFO_START)
#define TCSM1_TASK_DONE (TCSM1_FIFO_START + 4)//C004

/*frame args in tcsm1*/
#define DFRM_ARG_LEN TCSM1_ALN4(sizeof(FIFO_DECODER))
#define TCSM1_DFRM_ADDR (TCSM1_TASK_DONE + 4)
#define TCSM1_DFRM_ADDR_VADDR TCSM1_VADDR_UNCACHE(TCSM1_DFRM_ADDR)

/*MB args buffer in tcsm1*/
#define MBARGS_BUF_LEN TCSM1_ALN4(sizeof(FIFO_MB))
#define TCSM1_MBARGS_BUF0 (TCSM1_DFRM_ADDR+DFRM_ARG_LEN)
#define TCSM1_MBARGS_BUF1 (TCSM1_MBARGS_BUF0+MBARGS_BUF_LEN)
#define TCSM1_MBARGS_BUF2 (TCSM1_MBARGS_BUF1+MBARGS_BUF_LEN)
#endif /* JZC_MDMA1_OPT */

/*GP1 chain: args from j1 to aux (from task fifo) */
#define GP1_ARG_CHAIN_LEN ((4*1)<<SPACE_TYPE_WORD)
#define TCSM1_GP1_ARG_CHAIN (TCSM1_MBARGS_BUF2+MBARGS_BUF_LEN)
#define TCSM1_GP1_ARG_CHAIN_VADDR TCSM1_VADDR_UNCACHE(TCSM1_GP1_ARG_CHAIN)//need change to tcsm1_vaddr()

/*GP1 chain: tran reconstructed pixel from tcsm1 to sdram*/
#ifdef JZC_AUX_GP1_SYNC
#define GP1_TRAN_CHAIN_LEN ((4*4)<<SPACE_TYPE_WORD)
#else
#define GP1_TRAN_CHAIN_LEN ((4*3)<<SPACE_TYPE_WORD)
#endif
#define TCSM1_GP1_TRAN_CHAIN (TCSM1_GP1_ARG_CHAIN+ GP1_ARG_CHAIN_LEN)

/*quant matrix for dequant_mpeg (flushed from j1 @ each frame's beginning)*/
#define QUANT_MATRIX_LEN (64<<SPACE_TYPE_SHORT)
#define TCSM1_QUANT_MATRIX (TCSM1_GP1_TRAN_CHAIN+GP1_TRAN_CHAIN_LEN)

/*MC chain*/
#ifdef JZC_AUX_MC_SYNC
#define MC_DES_BUF_LEN (((10*12) + 4)<<SPACE_TYPE_WORD) // +4 : for sync node 
#else
#define MC_DES_BUF_LEN ((10*12)<<SPACE_TYPE_WORD)
#endif
#define TCSM1_MC_DES_BUF0 (TCSM1_QUANT_MATRIX+QUANT_MATRIX_LEN)
#define TCSM1_MC_DES_BUF0_VADDR TCSM1_VADDR_UNCACHE(TCSM1_MC_DES_BUF0)
#define TCSM1_MC_DES_BUF1 (TCSM1_MC_DES_BUF0+MC_DES_BUF_LEN)
#define TCSM1_MC_DES_BUF1_VADDR TCSM1_VADDR_UNCACHE(TCSM1_MC_DES_BUF1)
/*RECON BUFFER*/
/*
  +-------+-------+-------+-------+-------+
  | Y0    | Y1    | Y2    | Y3    | YB    |
  |       |       |       |       |       |
  |       |       |       |       |       |
  +-------+-------+-------+-------+-------+
  |<------------ 16*5 byte -------------->| 

  +---+---+---+---+---+---+---+---+---+---+
  |U0 |U1 |U2 |U3 |V0 |V1 |V2 |V3 |UB |VB |
  +---+---+---+---+---+---+---+---+---+---+
  |<------------ 16*5 byte -------------->|  
 */

#define RECON_BUF_STRIDE 80
#define TCSM1_RECON_BUF (TCSM1_MC_DES_BUF1+MC_DES_BUF_LEN)
#define RECON_BUF_LEN (RECON_BUF_STRIDE*(16+8))
#define TCSM1_RECON_YBUF0 (TCSM1_RECON_BUF)
#define TCSM1_RECON_UBUF0 (TCSM1_RECON_YBUF0+RECON_BUF_STRIDE*16)
#define TCSM1_RECON_VBUF0 (TCSM1_RECON_UBUF0+32)

#define TCSM1_RECON_BYBUF0 (TCSM1_RECON_YBUF0+64)
#define TCSM1_RECON_BUBUF0 (TCSM1_RECON_UBUF0+64)
#define TCSM1_RECON_BVBUF0 (TCSM1_RECON_BUBUF0+8)

#define TCSM1_RECON_YBUF1 (TCSM1_RECON_YBUF0+RECON_BUF_LEN)
#define TCSM1_RECON_UBUF1 (TCSM1_RECON_YBUF1+RECON_BUF_STRIDE*16)
#define TCSM1_RECON_VBUF1 (TCSM1_RECON_UBUF1+32)

#define TCSM1_RECON_BYBUF1 (TCSM1_RECON_YBUF1+64)
#define TCSM1_RECON_BUBUF1 (TCSM1_RECON_UBUF1+64)
#define TCSM1_RECON_BVBUF1 (TCSM1_RECON_BUBUF1+8)

#ifdef JZC_MDMA1_OPT
#define TCSM1_RECON_YBUF2 (TCSM1_RECON_YBUF1+RECON_BUF_LEN)
#define TCSM1_RECON_UBUF2 (TCSM1_RECON_YBUF2+RECON_BUF_STRIDE*16)
#define TCSM1_RECON_VBUF2 (TCSM1_RECON_UBUF2+32)

#define TCSM1_RECON_BYBUF2 (TCSM1_RECON_YBUF2+64)
#define TCSM1_RECON_BUBUF2 (TCSM1_RECON_UBUF2+64)
#define TCSM1_RECON_BVBUF2 (TCSM1_RECON_BUBUF2+8)

#ifdef JZC_AUX_MC_SYNC
#define TCSM1_MC_SYNCFLAG1_ADDR (TCSM1_RECON_BYBUF2 + 0)
#define TCSM1_MC_SYNCFLAG2_ADDR (TCSM1_RECON_BYBUF2 + 4)
#endif

#ifdef JZC_AUX_GP1_SYNC
#define TCSM1_GP1_SYNCFLAG1_ADDR (TCSM1_RECON_BYBUF2 + 8)
#define TCSM1_GP1_SYNCFLAG2_ADDR (TCSM1_RECON_BYBUF2 + 12)
#endif
#define IDCT_BUF_LEN ((6*64)<<SPACE_TYPE_SHORT)
#define TCSM1_IDCT_BUF0 (TCSM1_RECON_YBUF2+RECON_BUF_LEN)
#define TCSM1_IDCT_BUF1 (TCSM1_IDCT_BUF0+IDCT_BUF_LEN)

#else
/*IDCT Buffer*/
#define IDCT_BUF_LEN ((6*64)<<SPACE_TYPE_SHORT)
#define TCSM1_IDCT_BUF0 (TCSM1_RECON_YBUF1+RECON_BUF_LEN)
#define TCSM1_IDCT_BUF1 (TCSM1_IDCT_BUF0+IDCT_BUF_LEN)

#ifdef JZC_AUX_MC_SYNC
#define TCSM1_MC_SYNCFLAG1_ADDR  (TCSM1_IDCT_BUF1 + IDCT_BUF_LEN)
#define TCSM1_MC_SYNCFLAG2_ADDR  (TCSM1_MC_SYNCFLAG1_ADDR + 4)

#ifdef JZC_AUX_GP1_SYNC 
  #define TCSM1_GP1_SYNCFLAG1_ADDR (TCSM1_MC_SYNCFLAG1_ADDR + 4)
  #define TCSM1_GP1_SYNCFLAG2_ADDR (TCSM1_GP1_SYNCFLAG1_ADDR + 4)
#endif

#else /* JZC_AUX_MC_SYNC */

#ifdef JZC_AUX_GP1_SYNC
#define TCSM1_GP1_SYNCFLAG1_ADDR (TCSM1_IDCT_BUF1 + IDCT_BUF_LEN)
#define TCSM1_GP1_SYNCFLAG2_ADDR (TCSM1_GP1_SYNCFLAG1_ADDR + 4)
#endif

#endif /* JZC_AUX_MC_SYNC */
#endif  /*JZC_MDMA1_OPT */

#endif /*__JZC_TCSM_H__*/
